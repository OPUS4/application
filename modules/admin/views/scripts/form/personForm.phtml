<?PHP
/*
 * This file is part of OPUS. The software OPUS has been originally developed
 * at the University of Stuttgart with funding from the German Research Net,
 * the Federal Department of Higher Education and Research and the Ministry
 * of Science, Research and the Arts of the State of Baden-Wuerttemberg.
 *
 * OPUS 4 is a complete rewrite of the original OPUS software and was developed
 * by the Stuttgart University Library, the Library Service Center
 * Baden-Wuerttemberg, the Cooperative Library Network Berlin-Brandenburg,
 * the Saarland University and State Library, the Saxon State Library -
 * Dresden State and University Library, the Bielefeld University Library and
 * the University Library of Hamburg University of Technology with funding from
 * the German Research Foundation and the European Regional Development Fund.
 *
 * LICENCE
 * OPUS is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the Licence, or any later version.
 * OPUS is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details. You should have received a copy of the GNU General Public License
 * along with OPUS; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * @category    Application
 * @author      Jens Schwidder <schwidder@zib.de>
 * @copyright   Copyright (c) 2008-2013, OPUS 4 development team
 * @license     http://www.gnu.org/licenses/gpl.html General Public License
 * @version     $Id$
 */

/**
 * TODO htmlspecialchars
 * TODO extrahiere Person-Info Bereich in separaten ViewHelper bzw. Decorator oder Form Element
 */
?>

<?PHP
$personId = $this->element->getElement(Admin_Form_Person::ELEMENT_PERSON_ID)->getValue();
$person = $this->element->getModel();
if (is_null($person) && ! is_null($personId)) {
    $person = new Opus_Person($personId);
} else {
    // TODO err output
}

// Vollständige ID für Formular ermitteln
$formId = $this->element->getElement(Admin_Form_Person::ELEMENT_PERSON_ID)->getId();
$formId = substr($formId, 0, strrpos($formId, '-') + 1);
?>

<div class="multiple-wrapper <?= ($this->element->getOrder() % 2) ? 'odd' : 'even' ?>">
    <div class="data-wrapper multiple-data">
<div id="<?= $this->element->getId() . '-element' ?>"> <!-- TODO include Role in ID -->
    <?PHP if (! $this->element->isViewModeEnabled()) : ?>
    <dl class="sort dropdown">
        <dt>
            <?= $this->element->getElement(Admin_Form_Document_Person::ELEMENT_SORT_ORDER)->renderViewHelper() ?>
            <a>Move</a></dt>
            <dd>
                <p class="label"><i><?= $this->translate('admin_document_person_move_label') ?></i></p>
                <?= $this->element->getSubForm('Moves') ?>
            </dd>
    </dl>
    <?PHP endif; ?>
    <div class="person-info">
        <span id="<?=$formId . 'LastName'?>" class="person-lastname"><?= $person->getLastName()?></span
           ><?PHP if (! is_null($person->getFirstName())) :
            ?>,
            <span id="<?=$formId . 'FirstName'?>" class="person-firstname"><?= $person->getFirstName() ?></span>
            <?PHP endif ?>
        <?PHP if (! is_null($person->getAcademicTitle())) : ?>
            <span id="<?=$formId . 'AcademicTitle'?>" class="person-academictitle">,
                <?= $person->getAcademicTitle() ?></span>
        <?PHP endif; ?>
        <?PHP if (! is_null($person->getDateOfBirth()) || ! is_null($person->getPlaceOfBirth())) : ?>
            (* <span id="<?= $formId . 'DateOfBirth' ?>" class="person-born-date"
                  ><?= $this->formatValue()->formatDate($person->getDateOfBirth()) ?></span
            ><?PHP if (! is_null($person->getPlaceOfBirth())) :
                ?><?= (is_null($person->getDateOfBirth())) ? '' : ', '
                    ?><span id="<?= $formId . 'PlaceOfBirth' ?>" class="person-born-place"
                      ><?= $person->getPlaceOfBirth() ?></span
            ><?PHP endif; ?>)
        <?PHP endif; ?>
        <?PHP if (! is_null($person->getEmail())) : ?>
        <div>
            <span id="<?=$formId . 'Email'?>" class="person-email"><?= $person->getEmail() ?></span>
            <?PHP if (! $this->element->isViewModeEnabled()) : ?>
            -<?= $this->element->getElement(Admin_Form_Document_Person::ELEMENT_ALLOW_CONTACT)->renderViewHelper() ?>
            <?= $this->translate('AllowEmailContact') ?>
            <?PHP elseif ($person->getAllowEmailContact()) : ?>
            <span id="<?= $formId . 'AllowContact'?>">(<?= $this->translate('AllowEmailContact') ?>)</span>
            <?PHP endif; ?>
        </div>
        <?PHP endif; ?>
    </div>
    <?PHP if (! $this->element->isViewModeEnabled()) : ?>
    <div class="person-actions">
        <dl class="settings col dropdown">
            <dt><a><?= $this->translate('admin_document_person_actions_label') ?></a></dt>
            <dd>
                <p class="label"><i><?= $this->translate('admin_document_person_roles_label') ?></i></p>
                <?= $this->element->getElement(Admin_Form_Person::ELEMENT_PERSON_ID)->renderViewHelper() ?>
                <?= $this->element->getSubForm('Roles') ?>
                <p class="label"><i><?= $this->translate('admin_document_person_remove_label') ?></i></p>
                <ul class="buttons">
                    <li class="edit"><?=
                        $this->element->getElement(Admin_Form_Document_Person::ELEMENT_EDIT)->renderViewHelper()
                    ?></li>
                </ul>
            </dd>
        </dl>
        <ul class="links">
            <li class="Remove-data"><?= $this->element->getElement(Admin_Form_Document_MultiSubForm::ELEMENT_REMOVE)->renderViewHelper() ?></li>
        </ul>
    </div>
    <?PHP endif; ?>
</div>
    </div>
</div>
