
; Configuration of the tasks to be run by the cron triggered task scheduler.
;
; For each task the following configuration is needed:
; Enable/disable the task: true or false
; taskname.enabled = true
; Classname of the task to be run
; taskname.class = "Application_Task_DummyTask1"

; If there are values to be set for the task class/object
; taskname.options.parameterName1 = "value1"
; taskname.options.parameterName2 = "value2"

; The task schedule expression (equivalent to a Linux cron schedule expression)
; if not configured "*/1 * * * *" will be used as the default
; taskname.schedule = "*/1 * * * *"

; By default tasks are not allowed to overlap a still running previous instance
; This behaviour can be changed with the optional preventOverlapping setting,
; to disable it, add the following setting to the desired task setting:
; taskname.preventOverlapping = false

; Einmal pro Stunde
checkConsistencyTask.enabled = false
checkConsistencyTask.class = "Application_Job_CheckConsistencyJob"
checkConsistencyTask.schedule = "0 * * * *"

; Einmal pro Nacht (z.B. 0:00 Uhr)
cleanTemporariesTask.enabled = false
cleanTemporariesTask.class = "Application_Job_CleanTemporariesJob"
cleanTemporariesTask.schedule = "0 0 * * *"
; Duration e.g., P2D, P4M
cleanTemporariesTask.options.duration = "P2D";

; Einmal pro Nacht (z.B. 2:00 Uhr)
embargoUpdateTask.enabled = false
embargoUpdateTask.class = "Application_Job_EmbargoUpdateJob"
embargoUpdateTask.schedule = "0 2 * * *"

; TODO Wof체r ist dieser Job notwendig ?
importMetadataTask.enabled = false
importMetadataTask.class = "Application_Job_ImportMetadataJob"
importMetadataTask.schedule = "*/1 * * * *"

; Mailversand alle 5 Minuten
sendNotificationTask.enabled = false
sendNotificationTask.class = "Application_Job_SendNotificationJob"
sendNotificationTask.schedule = "*/5 * * * *"

; TODO Rausschmeissen ?
sendReviewRequestTask.enabled = false
sendReviewRequestTask.class = "Application_Job_SendReviewRequestJob"
sendReviewRequestTask.schedule = "*/1 * * * *"

; Solr-Indexierung alle 5 Minuten
solrUpdateTask.enabled = false
solrUpdateTask.class = "Application_Job_SolrUpdateJob"
solrUpdateTask.schedule = "*/5 * * * *"

; Einmal pro Stunde
updateDocumentCacheTask.enabled = false
updateDocumentCacheTask.class = "Application_Job_UpdateDocumentCacheJob"
updateDocumentCacheTask.schedule = "0 * * * *"

; Einmal pro Nacht (z.B. 2:00 Uhr)
registerLocalDoisTask.enabled = false
registerLocalDoisTask.class = "Application_Job_RegisterLocalDoisJob"
registerLocalDoisTask.schedule = "0 2 * * *"

; Einmal pro Nacht (+1 Stunde nach registerLocalDoisTask)
; pr체fe nur lokale DOIs, die vor mindestens 24h bei DataCite registriert wurden
; setze den Wert von $delayInHours auf null, um alle registrierten DOIs unabh채ngig
; vom Registrierungszeitpunkt zu pr체fen
verifyLocalDoisTask.enabled = false
verifyLocalDoisTask.class = "Application_Job_VerifyLocalDoisJob"
verifyLocalDoisTask.schedule = "0 3 * * *"
verifyLocalDoisTask.options.delayInHours = 24

; Einmal pro Nacht (z.B. 2:00 Uhr)
checkWorkspaceFilesTask.enabled = false
checkWorkspaceFilesTask.class = "Application_Job_CheckWorkspaceFilesJob"
checkWorkspaceFilesTask.schedule = "0 2 * * *"
