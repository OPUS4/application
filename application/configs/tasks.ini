
; Configuration of the tasks to be run by the cron triggered task scheduler.
;
; For each task the following configuration is needed:
; Enable/disable the task: true or false
; crontasks.taskname.enabled = true
; Classname of the task to be run
; crontasks.taskname.class = "Application_Task_DummyTask1"
; If there are values to be set for the task class/object
; crontasks.taskname.options.parameterName1 = "value1"
; crontasks.taskname.options.parameterName2 = "value2"
; The task schedule expression (equivalent to a Linux cron schedule expression)
; crontasks.taskname.schedule = "*/1 * * * *"

crontasks.checkConsistencyTask.enabled = false
crontasks.checkConsistencyTask.class = "Application_Job_CheckConsistencyJob"
crontasks.checkConsistencyTask.schedule = "*/1 * * * *"

crontasks.cleanTemporariesTask.enabled = false
crontasks.cleanTemporariesTask.class = "Application_Job_CleanTemporariesJob"
; Duration e.g., P2D, P4M
crontasks.cleanTemporariesTask.options.duration = "P2D";
crontasks.cleanTemporariesTask.schedule = "0 0 * * *"

crontasks.embargoUpdateTask.enabled = false
crontasks.embargoUpdateTask.class = "Application_Job_EmbargoUpdateJob"
crontasks.embargoUpdateTask.schedule = "*/1 * * * *"

crontasks.importMetadataTask.enabled = false
crontasks.importMetadataTask.class = "Application_Job_ImportMetadataJob"
crontasks.importMetadataTask.schedule = "*/1 * * * *"

crontasks.registerLocalDoisTask.enabled = false
crontasks.registerLocalDoisTask.class = "Application_Job_RegisterLocalDoisJob"
crontasks.registerLocalDoisTask.schedule = "*/1 * * * *"

crontasks.sendNotificationTask.enabled = false
crontasks.sendNotificationTask.class = "Application_Job_SendNotificationJob"
; Mailversand alle 5 Minuten
crontasks.sendNotificationTask.schedule = "*/5 * * * *"

crontasks.sendReviewRequestTask.enabled = false
crontasks.sendReviewRequestTask.class = "Application_Job_SendReviewRequestJob"
crontasks.sendReviewRequestTask.schedule = "*/1 * * * *"

crontasks.solrUpdateTask.enabled = false
crontasks.solrUpdateTask.class = "Application_Job_SolrUpdateJob"
; Solr-Indexierung alle 5 Minuten
crontasks.solrUpdateTask.schedule = "*/5 * * * *"

crontasks.updateDocumentCacheTask.enabled = true
crontasks.updateDocumentCacheTask.class = "Application_Job_UpdateDocumentCacheJob"
crontasks.updateDocumentCacheTask.schedule = "*/1 * * * *"

crontasks.verifyLocalDoisTask.enabled = false
crontasks.verifyLocalDoisTask.class = "Application_Job_VerifyLocalDoisJob"
; prüfe nur lokale DOIs, die vor mindestens 24h bei DataCite registriert wurden
; setze den Wert von $delayInHours auf null, um alle registrierten DOIs unabhängig
; vom Registrierungszeitpunkt zu prüfen
crontasks.verifyLocalDoisTask.options.delayInHours = 24
crontasks.verifyLocalDoisTask.schedule = "*/1 * * * *"

crontasks.checkWorkspaceFilesTask.enabled = false
crontasks.checkWorkspaceFilesTask.class = "Application_Job_CheckWorkspaceFilesJob"
crontasks.checkWorkspaceFilesTask.schedule = "*/1 * * * *"
